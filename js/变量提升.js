// 1.变量提升：当栈内存(作用域)形成，JS代码自上而下执行之前，
// 浏览器首先会把所有带"var"和"function"关键词的进行提前“声明”或“定义”，
// 这种预先处理机制称之为"变量提升"
// =>声明：var a (默认值undefined)
// =>定义：a=10 (定义其实是赋值)
// [变量提升阶段]：
// =>带"var"的只声明未定义
// =>带"function"的声明和赋值都完成

// 2.变量提升只发生在当前作用域(eg:页面加载开始时，只对全局作用域的进行提升，因此此时函数中存储的都是字符串)
// 3.私有作用域形成后不是立即执行代码，而是先变量提升（变脸提升前，先形参赋值）